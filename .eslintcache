[{"C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\index.js":"1","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\components\\index.js":"2","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\assets\\index.js":"3","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\components\\button\\index.js":"4","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\api\\index.js":"5","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\api\\auth\\index.js":"6","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\pages\\index.js":"7","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\pages\\auth\\index.js":"8","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\pages\\auth\\signup\\index.js":"9","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\pages\\auth\\login\\index.js":"10","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\components\\input\\index.js":"11","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\pages\\auth\\authPages\\index.js":"12","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\api\\auth\\logService\\index.js":"13","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\api\\auth\\httpService\\index.js":"14","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\api\\auth\\userService\\index.js":"15","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\api\\auth\\authService\\index.js":"16","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\widgets\\index.js":"17","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\widgets\\navbar\\index.js":"18","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\widgets\\navbar\\authNavBar\\index.js":"19","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\pages\\application\\index.js":"20","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\PressPlay.js":"21","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\pages\\auth\\passwordReset\\index.js":"22","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\utilities\\loader\\index.js":"23","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\pages\\application\\home\\index.js":"24","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\assets\\icons\\index.js":"25","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\api\\auth\\activateUser\\index.js":"26","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\pages\\application\\dashboard\\index.js":"27","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\pages\\application\\landingPage\\index.js":"28","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\widgets\\dashboardNavbar\\index.js":"29","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\widgets\\uploadModal\\index.js":"30","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\pages\\application\\userProfile\\index.js":"31","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\pages\\auth\\logout\\index.js":"32","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\widgets\\landingNavbar\\index.js":"33","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\pages\\auth\\activateAccount\\index.js":"34","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\api\\auth\\getCurrentUser\\index.js":"35","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\api\\auth\\podcastService\\index.js":"36","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\api\\auth\\episodeService\\index.js":"37","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\widgets\\carousel\\index.js":"38","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\utilities\\index.js":"39","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\utilities\\imageSlider\\index.js":"40","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\utilities\\arrow\\index.js":"41","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\pages\\application\\podcastPage\\index.js":"42","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\widgets\\episodeUploadModal\\index.js":"43","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\utilities\\audioPlayer\\index.js":"44","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\utilities\\audioPlayer\\header\\index.js":"45","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\utilities\\audioPlayer\\controls\\index.js":"46"},{"size":759,"mtime":1612797154289,"results":"47","hashOfConfig":"48"},{"size":61,"mtime":1611309399209,"results":"49","hashOfConfig":"48"},{"size":2199,"mtime":1612298445455,"results":"50","hashOfConfig":"48"},{"size":512,"mtime":1611912025121,"results":"51","hashOfConfig":"48"},{"size":25,"mtime":1611145475112,"results":"52","hashOfConfig":"48"},{"size":265,"mtime":1612264651549,"results":"53","hashOfConfig":"48"},{"size":57,"mtime":1611530833299,"results":"54","hashOfConfig":"48"},{"size":153,"mtime":1611912030605,"results":"55","hashOfConfig":"48"},{"size":4827,"mtime":1612032734240,"results":"56","hashOfConfig":"48"},{"size":5651,"mtime":1612769454890,"results":"57","hashOfConfig":"48"},{"size":721,"mtime":1611427526741,"results":"58","hashOfConfig":"48"},{"size":3283,"mtime":1612028600475,"results":"59","hashOfConfig":"48"},{"size":132,"mtime":1611500689632,"results":"60","hashOfConfig":"48"},{"size":510,"mtime":1612017239550,"results":"61","hashOfConfig":"48"},{"size":507,"mtime":1611912346582,"results":"62","hashOfConfig":"48"},{"size":246,"mtime":1611523536842,"results":"63","hashOfConfig":"48"},{"size":158,"mtime":1612268380058,"results":"64","hashOfConfig":"48"},{"size":31,"mtime":1611528452075,"results":"65","hashOfConfig":"48"},{"size":797,"mtime":1612170611561,"results":"66","hashOfConfig":"48"},{"size":151,"mtime":1612270512842,"results":"67","hashOfConfig":"48"},{"size":1886,"mtime":1612775208087,"results":"68","hashOfConfig":"48"},{"size":7658,"mtime":1612028610720,"results":"69","hashOfConfig":"48"},{"size":7612,"mtime":1612797131954,"results":"70","hashOfConfig":"48"},{"size":5080,"mtime":1612715264999,"results":"71","hashOfConfig":"48"},{"size":66548,"mtime":1612707250759,"results":"72","hashOfConfig":"48"},{"size":251,"mtime":1611920306695,"results":"73","hashOfConfig":"48"},{"size":12945,"mtime":1612730417845,"results":"74","hashOfConfig":"48"},{"size":14321,"mtime":1612012729421,"results":"75","hashOfConfig":"48"},{"size":1063,"mtime":1612775227684,"results":"76","hashOfConfig":"48"},{"size":11846,"mtime":1612779150656,"results":"77","hashOfConfig":"48"},{"size":7055,"mtime":1612769651115,"results":"78","hashOfConfig":"48"},{"size":536,"mtime":1612033224738,"results":"79","hashOfConfig":"48"},{"size":688,"mtime":1612250173788,"results":"80","hashOfConfig":"48"},{"size":902,"mtime":1611920405052,"results":"81","hashOfConfig":"48"},{"size":290,"mtime":1611920314264,"results":"82","hashOfConfig":"48"},{"size":1474,"mtime":1612699540975,"results":"83","hashOfConfig":"48"},{"size":2513,"mtime":1612862530756,"results":"84","hashOfConfig":"48"},{"size":5548,"mtime":1612858453936,"results":"85","hashOfConfig":"48"},{"size":53,"mtime":1612250592102,"results":"86","hashOfConfig":"48"},{"size":534,"mtime":1612307495283,"results":"87","hashOfConfig":"48"},{"size":336,"mtime":1612267523783,"results":"88","hashOfConfig":"48"},{"size":10990,"mtime":1612877505574,"results":"89","hashOfConfig":"48"},{"size":8727,"mtime":1612831794249,"results":"90","hashOfConfig":"48"},{"size":3735,"mtime":1612863170301,"results":"91","hashOfConfig":"48"},{"size":484,"mtime":1612707250832,"results":"92","hashOfConfig":"48"},{"size":5450,"mtime":1612863134935,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"y54b3f",{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"98"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"98"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"98"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"98"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"98"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"98"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"98"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"98"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"98"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\index.js",[],"C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\components\\index.js",[],["196","197"],"C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\assets\\index.js",[],"C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\components\\button\\index.js",[],"C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\api\\index.js",[],"C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\api\\auth\\index.js",[],"C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\pages\\index.js",[],"C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\pages\\auth\\index.js",[],"C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\pages\\auth\\signup\\index.js",[],"C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\pages\\auth\\login\\index.js",[],"C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\components\\input\\index.js",[],"C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\pages\\auth\\authPages\\index.js",["198","199"],"import React from \"react\";\r\nimport \"./auth.css\";\r\n\r\nclass AuthenticationPage extends React.Component {\r\n  validateDetails = () => {\r\n    const errors = {};\r\n\r\n    const {\r\n      userEmail,\r\n      userPassword,\r\n      userFirstName,\r\n      userLastName,\r\n      newPassword,\r\n      confirmPassword,\r\n    } = {\r\n      ...this.state.account,\r\n    };\r\n\r\n    if (userEmail.trim() === \"\") {\r\n      errors.userEmail = \"Invalid email\";\r\n    }\r\n\r\n    if (userLastName.trim() === \"\") {\r\n      errors.userLastName = \"Lastname cannot be empty\";\r\n    }\r\n    if (userFirstName.trim() === \"\") {\r\n      errors.userName = \"Firstname cannot be empty\";\r\n    }\r\n\r\n    if (userPassword.trim() === \"\") {\r\n      errors.userPassword = \"Password is required!\";\r\n    }\r\n\r\n    if (userPassword.length < 7) {\r\n      errors.userPassword = \"Password is less than 7 characters\";\r\n    }\r\n\r\n    return Object.keys(errors).length === 0 ? null : errors;\r\n  };\r\n\r\n  validateSignUpProperties = ({ name, value }) => {\r\n    if (name === \"userFirstName\") {\r\n      if (value.trim() === \"\") {\r\n        return \"Enter firstname\";\r\n      }\r\n    }\r\n    if (name === \"userLastName\") {\r\n      if (value.trim() === \"\") {\r\n        return \"Lastname is empty\";\r\n      }\r\n    }\r\n    if (name === \"userEmail\") {\r\n      if (value.trim() === \"\") {\r\n        return \"Email cannot be empty\";\r\n      }\r\n    }\r\n\r\n    if (\r\n      name === \"userPassword\" ||\r\n      name === \"newPassword\" ||\r\n      name === \"confirmPassword\"\r\n    ) {\r\n      if (value.trim() === \"\") {\r\n        return \"Password is required!\";\r\n      }\r\n\r\n      if (value.length < 7) {\r\n        return \"Password is too short. Must be at least 7 characters\";\r\n      }\r\n    }\r\n    if (name === \"resetEmail\") {\r\n      if (value.trim() === \"\") {\r\n        return \"Email can not be empty.\";\r\n      }\r\n    }\r\n    if (name === \"newPassword\") {\r\n      if (value.trim() === \"\") {\r\n        return \"Field can not be empty.\";\r\n      }\r\n    }\r\n    if (name === \"confirmPassword\") {\r\n      if (value.trim() === \"\") {\r\n        return \"Please confirm your new password\";\r\n      }\r\n    }\r\n  };\r\n\r\n  handleRemeberMe = () => {\r\n    let checked = !this.state.checked;\r\n    this.setState({\r\n      checked: checked,\r\n    });\r\n  };\r\n\r\n  handleHidePassword = () => {\r\n    const iconChange =\r\n      this.state.iconChange === \"far fa-eye\"\r\n        ? \"far fa-eye-slash\"\r\n        : \"far fa-eye\";\r\n\r\n    const passwordType =\r\n      this.state.passwordType === \"password\" ? \"text\" : \"password\";\r\n\r\n    this.setState({\r\n      iconChange: iconChange,\r\n      passwordType: passwordType,\r\n    });\r\n  };\r\n\r\n  handleInputChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateSignUpProperties(input);\r\n\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const account = { ...this.state.account };\r\n    account[input.name] = input.value;\r\n    this.setState({ account, errors });\r\n  };\r\n}\r\n\r\nconst captureUserDetails = (\r\n  userEmail,\r\n  userPassword,\r\n  userFirstName,\r\n  userLastName\r\n) => {\r\n  return {\r\n    userEmail: userEmail,\r\n    userPassword: userPassword,\r\n    userFirstName: userFirstName,\r\n    userLastName: userLastName,\r\n  };\r\n};\r\n\r\nexport { AuthenticationPage, captureUserDetails };\r\n","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\api\\auth\\logService\\index.js",[],"C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\api\\auth\\httpService\\index.js",["200"],"import axios from \"axios\";\r\nimport logger from \"../logService\";\r\n\r\n// axios.interceptors.response.use(null, (error) => {\r\n//   const expectedError =\r\n//     error.response && error.response >= 400 && error.response < 500;\r\n\r\n//   if (!expectedError) {\r\n//     logger.log(error);\r\n//     alert(\"An unexpected error occured\");\r\n//   }\r\n\r\n//   return Promise.reject(error);\r\n// });\r\n\r\nconst http = {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n};\r\n\r\nexport default http;\r\n","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\api\\auth\\userService\\index.js",[],"C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\api\\auth\\authService\\index.js",["201"],"import http from \"../httpService\";\r\nimport { apiUrl } from \"../../../config.json\";\r\n\r\nconst apiEndpoint = apiUrl + \"/login\";\r\n\r\nexport const login = (email, password) => {\r\n  return http.post(apiEndpoint, {\r\n    email,\r\n    password,\r\n  });\r\n};\r\n","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\widgets\\index.js",[],"C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\widgets\\navbar\\index.js",[],"C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\widgets\\navbar\\authNavBar\\index.js",[],"C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\pages\\application\\index.js",[],"C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\PressPlay.js",["202"],"import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nimport { ActivateAccount, Dashboard, LogInPage, SignUpPage } from \"./pages\";\r\nimport { PasswordResetPage } from \"./pages\";\r\nimport \"./PressPlay.css\";\r\nimport { LandingPage } from \"./pages/application/landingPage\";\r\nimport { Logout } from \"./pages/auth/logout\";\r\n\r\nclass PressPlay extends React.Component {\r\n  state = { userFirstName: \"\", userDetails: {} };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      const user = localStorage.getItem(\"userDetails\");\r\n      const userDetails = JSON.parse(user);\r\n      console.log(\"current user \", userDetails);\r\n      this.setState({ user: userDetails.firstName, userDetails });\r\n    } catch (error) {}\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"press-play-main-container\">\r\n        <Switch>\r\n          <Route path=\"/signup\" component={SignUpPage} />\r\n          <Route path=\"/login\" component={LogInPage} />\r\n          <Route path=\"/logout\" component={Logout} />\r\n          <Route path=\"/resetPassword\" component={PasswordResetPage} />\r\n          <Route path=\"/activateAccount\" component={ActivateAccount} />\r\n          <Route\r\n            path=\"/dashboard\"\r\n            render={(props) => (\r\n              <Dashboard\r\n                user={this.state.user}\r\n                userDetails={this.state.userDetails}\r\n                {...props}\r\n              />\r\n            )}\r\n          />\r\n          <Route path=\"/activateAccount\" component={ActivateAccount} />\r\n          <Route path=\"/resetPassword\" component={PasswordResetPage} />\r\n          <Route path=\"/activateAccount\" component={ActivateAccount} />\r\n          <Route path=\"/signup\" component={SignUpPage} />\r\n          <Route path=\"/login\" component={LogInPage} />\r\n          <Route path=\"/\" component={LandingPage} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PressPlay;\r\n","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\pages\\auth\\passwordReset\\index.js",[],"C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\utilities\\loader\\index.js",[],"C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\pages\\application\\home\\index.js",["203","204"],"import React from \"react\";\r\nimport { Tab, Col, Nav, Row } from \"react-bootstrap\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport \"./home.css\";\r\nimport { Carousel } from \"../../../widgets\";\r\nimport { PodcastPage } from \"../podcastPage\";\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    podcastId: \"\",\r\n    showPodcastPage: false,\r\n  };\r\n  getPodcastId = (e, podcastId) => {\r\n    this.setState({\r\n      podcastId,\r\n      showPodcastPage: true,\r\n    });\r\n  };\r\n  hidePodcastPage = () => {\r\n    this.setState({\r\n      showPodcastPage: false,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div id=\"home\">\r\n          <Tab.Container id=\"tab-container\" defaultActiveKey=\"first\">\r\n            <Nav variant=\"pills\" className=\"flex-column\">\r\n              <Nav.Item>\r\n                <Nav.Link id=\"user-dashboard-nav-item\" eventKey=\"first\">\r\n                  Recommendations\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"second\">Trending</Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n            <Tab.Content>\r\n              <Tab.Pane eventKey=\"first\">\r\n                <main className=\"dashboard-main-container\">\r\n                  {this.state.showPodcastPage ? (\r\n                    <PodcastPage\r\n                      playerLaunch={this.props.playerLaunch}\r\n                      podcastId={this.state.podcastId}\r\n                      hidePodcastPage={this.hidePodcastPage}\r\n                    />\r\n                  ) : (\r\n                    <React.Fragment>\r\n                      <div className=\"content-wrapper\">\r\n                        <div>\r\n                          <h3 className=\"m-15\">Hi, {this.props.user}!</h3>\r\n                          <p className=\"m-15\">\r\n                            Here are some podcasts we think you might like\r\n                          </p>\r\n\r\n                          <section\r\n                            id=\"podcast-container\"\r\n                            className=\"recommendations\"\r\n                          >\r\n                            <Carousel\r\n                              viewPodcast={this.viewPodcast}\r\n                              getPodcastId={this.getPodcastId}\r\n                            />\r\n                          </section>\r\n                          <section\r\n                            id=\"podcast-container\"\r\n                            className=\"recommendations\"\r\n                          >\r\n                            <Carousel\r\n                              viewPodcast={this.viewPodcast}\r\n                              getPodcastId={this.getPodcastId}\r\n                            />\r\n                          </section>\r\n                          <section\r\n                            id=\"podcast-container\"\r\n                            className=\"recommendations\"\r\n                          >\r\n                            <Carousel\r\n                              viewPodcast={this.viewPodcast}\r\n                              getPodcastId={this.getPodcastId}\r\n                            />\r\n                          </section>\r\n                          <section\r\n                            id=\"podcast-container\"\r\n                            className=\"recommendations\"\r\n                          >\r\n                            <Carousel\r\n                              viewPodcast={this.viewPodcast}\r\n                              getPodcastId={this.getPodcastId}\r\n                            />\r\n                          </section>\r\n                        </div>\r\n                      </div>\r\n                    </React.Fragment>\r\n                  )}\r\n                </main>\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"second\">\r\n                <main className=\"dashboard-main-container\">\r\n                  <div className=\"content-wrapper\">\r\n                    <div>\r\n                      <h4 className=\"m-15\">Trending Podcasts</h4>\r\n                      <section\r\n                        id=\"podcast-container\"\r\n                        className=\"recommendations\"\r\n                      >\r\n                        <Carousel\r\n                          viewPodcast={this.viewPodcast}\r\n                          getPodcastId={this.getPodcastId}\r\n                        />\r\n                      </section>\r\n                      <h4>Most liked</h4>\r\n                      <section\r\n                        id=\"podcast-container\"\r\n                        className=\"recommendations\"\r\n                      >\r\n                        <Carousel\r\n                          viewPodcast={this.viewPodcast}\r\n                          getPodcastId={this.getPodcastId}\r\n                        />\r\n                      </section>\r\n                    </div>\r\n                  </div>\r\n                </main>\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"third\">Third</Tab.Pane>\r\n            </Tab.Content>\r\n          </Tab.Container>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport { Home };\r\n","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\assets\\icons\\index.js",[],"C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\api\\auth\\activateUser\\index.js",[],"C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\pages\\application\\dashboard\\index.js",["205"],"import React from \"react\";\r\nimport { Tab, Col, Nav, Row } from \"react-bootstrap\";\r\nimport \"./dashboard.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {\r\n  uploadIcon,\r\n  listeningIcon,\r\n  subscribersIcon,\r\n  likesIcon,\r\n  recommendation1,\r\n  angleRightIcon,\r\n} from \"../../../assets\";\r\nimport { UploadModal } from \"../../../widgets\";\r\nimport { IconLoader } from \"../../../utilities\";\r\n\r\nclass UserDashboard extends React.Component {\r\n  state = {\r\n    userDetails: {},\r\n    showUploadEditModal: false,\r\n    uploadPodcast: false,\r\n    showEpisodePodcast: true,\r\n    createInProgress: false,\r\n    createSuccess: false,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    console.log(this.props.userDetails);\r\n    this.setState({\r\n      userDetails: this.props.userDetails,\r\n    });\r\n  }\r\n\r\n  handleShowUploadEditModal = () => {\r\n    console.log(\"User Details:\", this.state.userDetails);\r\n    this.setState({\r\n      showUploadEditModal: true,\r\n      uploadPodcast: true,\r\n    });\r\n  };\r\n\r\n  handleCloseModal = () => {\r\n    this.setState({\r\n      showUploadEditModal: false,\r\n      uploadPodcast: false,\r\n    });\r\n  };\r\n\r\n  handlePodcastCreation = (inProgress, completed) => {\r\n    this.setState({\r\n      createInProgress: inProgress,\r\n      createSuccess: completed,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n          <Row id=\"home\">\r\n            <Nav variant=\"pills\" className=\"flex-column\">\r\n              <Nav.Item>\r\n                <Nav.Link id=\"user-dashboard-nav-item\" eventKey=\"first\">\r\n                  Overview\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"second\">View Podcasts</Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n            <Tab.Content>\r\n              <Tab.Pane eventKey=\"first\">\r\n                <main className=\"dashboard-main-container\">\r\n                  <div className=\"content-wrapper\">\r\n                    <h2>Welcome to your dashboard!</h2>\r\n                    <h4>\r\n                      Find all about your audience, content analytics, and\r\n                      manage your podcasts.\r\n                    </h4>\r\n                    <section>\r\n                      <section className=\"dashboard-analytics\">\r\n                        <aside className=\"analytics-box podcasts\">\r\n                          {listeningIcon()}\r\n                          <div className=\"content\">\r\n                            <p>1000</p>\r\n                            <p>Podcasts</p>\r\n                          </div>\r\n                        </aside>\r\n                        <aside className=\"analytics-box subscribers\">\r\n                          {subscribersIcon()}\r\n                          <div className=\"content\">\r\n                            <p>2000</p>\r\n                            <p>Subscribers</p>\r\n                          </div>\r\n                        </aside>\r\n                        <aside className=\"analytics-box likes\">\r\n                          {likesIcon()}\r\n                          <div className=\"content\">\r\n                            <p>100K</p>\r\n                            <p>Likes</p>\r\n                          </div>\r\n                        </aside>\r\n                      </section>\r\n                      <section className=\"upload-box\">\r\n                        <h4>Start uploading here!</h4>\r\n                        <div className=\"upload-content\">\r\n                          <button\r\n                            className=\"upload\"\r\n                            onClick={this.handleShowUploadEditModal}\r\n                          >\r\n                            {uploadIcon()}Create podcast\r\n                          </button>\r\n\r\n                          {this.state.createInProgress && (\r\n                            <div className=\"podcast-success-message\">\r\n                              {this.state.createSuccess ? (\r\n                                <h4>\r\n                                  <i className=\"fas fa-check-square\"></i>{\" \"}\r\n                                  Podcast created successfully\r\n                                </h4>\r\n                              ) : (\r\n                                <div id=\"podcast-creation-loader\">\r\n                                  <IconLoader />\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </section>\r\n                    </section>\r\n                  </div>\r\n                </main>\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"second\">\r\n                <main className=\"dashboard-main-container view-podcasts\">\r\n                  <div className=\"content-wrapper\">\r\n                    <div className=\"podcast-listing-main-container\">\r\n                      <section>\r\n                        <aside\r\n                          id=\"podcast-listing-wrapper\"\r\n                          className=\"podcast-listing header\"\r\n                        >\r\n                          <h2>Here are all your podcasts</h2>\r\n                          <div className=\"podcast-listing-container \">\r\n                            <label htmlFor=\"selectAllPodcasts\">\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                name=\"selectAllPodcasts\"\r\n                                id=\"\"\r\n                              />\r\n                              <span className=\"header-select-all\">\r\n                                Select All\r\n                              </span>\r\n                            </label>\r\n\r\n                            <p>Date added</p>\r\n                            <p>likes</p>\r\n                          </div>\r\n                          <div className=\"podcast-listing-container\">\r\n                            <label htmlFor=\"selectAllPodcasts\">\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                name=\"selectAllPodcasts\"\r\n                                id=\"\"\r\n                              />\r\n                              <div className=\"image-container\">\r\n                                <img src={recommendation1} alt=\"\" />\r\n                                <p>Skip the repeat</p>\r\n                              </div>\r\n                            </label>\r\n\r\n                            <p>Date added</p>\r\n                            <p>likes</p>\r\n                            <NavLink to=\"/dashboard/dashboard\">\r\n                              View more {angleRightIcon()}\r\n                            </NavLink>\r\n                          </div>\r\n                          <div className=\"podcast-listing-container\">\r\n                            <label htmlFor=\"selectAllPodcasts\">\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                name=\"selectAllPodcasts\"\r\n                                id=\"\"\r\n                              />\r\n                              <div className=\"image-container\">\r\n                                <img src={recommendation1} alt=\"\" />\r\n                                <p>Skip the repeat</p>\r\n                              </div>\r\n                            </label>\r\n\r\n                            <p>Date added</p>\r\n                            <p>likes</p>\r\n                            <NavLink to=\"/dashboard/dashboard\">\r\n                              View more {angleRightIcon()}\r\n                            </NavLink>\r\n                          </div>\r\n                          <div className=\"podcast-listing-container\">\r\n                            <label htmlFor=\"selectAllPodcasts\">\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                name=\"selectAllPodcasts\"\r\n                                id=\"\"\r\n                              />\r\n                              <div className=\"image-container\">\r\n                                <img src={recommendation1} alt=\"\" />\r\n                                <p>Skip the repeat</p>\r\n                              </div>\r\n                            </label>\r\n\r\n                            <p>Date added</p>\r\n                            <p>likes</p>\r\n                            <NavLink to=\"/dashboard/dashboard\">\r\n                              View more {angleRightIcon()}\r\n                            </NavLink>\r\n                          </div>\r\n                          <div className=\"podcast-listing-container\">\r\n                            <label htmlFor=\"selectAllPodcasts\">\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                name=\"selectAllPodcasts\"\r\n                                id=\"\"\r\n                              />\r\n                              <div className=\"image-container\">\r\n                                <img src={recommendation1} alt=\"\" />\r\n                                <p>Skip the repeat</p>\r\n                              </div>\r\n                            </label>\r\n\r\n                            <p>Date added</p>\r\n                            <p>likes</p>\r\n                            <NavLink to=\"/dashboard/dashboard\">\r\n                              View more {angleRightIcon()}\r\n                            </NavLink>\r\n                          </div>{\" \"}\r\n                          <div className=\"podcast-listing-container\">\r\n                            <label htmlFor=\"selectAllPodcasts\">\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                name=\"selectAllPodcasts\"\r\n                                id=\"\"\r\n                              />\r\n                              <div className=\"image-container\">\r\n                                <img src={recommendation1} alt=\"\" />\r\n                                <p>Skip the repeat</p>\r\n                              </div>\r\n                            </label>\r\n\r\n                            <p>Date added</p>\r\n                            <p>likes</p>\r\n                            <NavLink to=\"/dashboard/dashboard\">\r\n                              View more {angleRightIcon()}\r\n                            </NavLink>\r\n                          </div>{\" \"}\r\n                          <div className=\"podcast-listing-container\">\r\n                            <label htmlFor=\"selectAllPodcasts\">\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                name=\"selectAllPodcasts\"\r\n                                id=\"\"\r\n                              />\r\n                              <div className=\"image-container\">\r\n                                <img src={recommendation1} alt=\"\" />\r\n                                <p>Skip the repeat</p>\r\n                              </div>\r\n                            </label>\r\n\r\n                            <p>Date added</p>\r\n                            <p>likes</p>\r\n                            <NavLink to=\"/dashboard/dashboard\">\r\n                              View more {angleRightIcon()}\r\n                            </NavLink>\r\n                          </div>{\" \"}\r\n                          <div className=\"podcast-listing-container\">\r\n                            <label htmlFor=\"selectAllPodcasts\">\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                name=\"selectAllPodcasts\"\r\n                                id=\"\"\r\n                              />\r\n                              <div className=\"image-container\">\r\n                                <img src={recommendation1} alt=\"\" />\r\n                                <p>Skip the repeat</p>\r\n                              </div>\r\n                            </label>\r\n\r\n                            <p>Date added</p>\r\n                            <p>likes</p>\r\n                            <NavLink to=\"/dashboard/dashboard\">\r\n                              View more {angleRightIcon()}\r\n                            </NavLink>\r\n                          </div>\r\n                        </aside>\r\n                      </section>\r\n                    </div>\r\n                  </div>\r\n                </main>\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"third\">Third</Tab.Pane>\r\n            </Tab.Content>\r\n          </Row>\r\n        </Tab.Container>\r\n        <UploadModal\r\n          podcastDetails={this.state.podcastDetails}\r\n          show={this.state.showUploadEditModal}\r\n          uploadPodcast={this.state.uploadPodcast}\r\n          userId={this.state.userDetails._id}\r\n          closeModal={this.handleCloseModal}\r\n          createSuccess={this.handlePodcastCreation}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport { UserDashboard };\r\n","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\pages\\application\\landingPage\\index.js",[],"C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\widgets\\dashboardNavbar\\index.js",["206"],"import React from \"react\";\r\nimport { primaryLogo, searchIcon } from \"../../assets\";\r\nimport profileImage from \"../../assets/images/05D10002-48EC-4D1E-BA3F-8957EC3D2651L0001.jpeg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./dashboardNavbar.css\";\r\n\r\nfunction DashboardNavBar({ handleModalOpen, user }) {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"logo-container\">\r\n        <Link to=\"/dashboard/home\">\r\n          <img\r\n            src={primaryLogo}\r\n            className=\"pressplay-logo\"\r\n            alt=\"pressplay logo\"\r\n          />\r\n        </Link>\r\n      </div>\r\n      <div className=\"dashboard-search-profile\">\r\n        <div htmlFor=\"search\" className=\"dashboard-nav-search\">\r\n          {searchIcon()}\r\n          <input type=\"search\" />\r\n        </div>\r\n\r\n        <div className=\"dashboard-profile\">\r\n          <p>{user}</p>\r\n          <div className=\"profile-avatar\">\r\n            <img src={profileImage} alt=\"profile\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport { DashboardNavBar };\r\n","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\widgets\\uploadModal\\index.js",["207"],"import React from \"react\";\r\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\r\nimport { Modal, Tabs, Tab } from \"react-bootstrap\";\r\nimport ModalButton from \"react-bootstrap/Button\";\r\nimport \"./uploadModal.css\";\r\nimport { inputFileIcon, headphoneIcon } from \"../../assets\";\r\nimport { AuthenticationPage } from \"../../pages/auth/authPages\";\r\nimport {\r\n  capturePodcastDetails,\r\n  updatePodcast,\r\n  uploadPodcastDetails,\r\n} from \"../../api/auth\";\r\nimport { IconLoader } from \"../../utilities/loader\";\r\nimport {\r\n  captureEpisodeDetails,\r\n  uploadEpisode,\r\n} from \"../../api/auth/episodeService\";\r\n\r\nclass UploadModal extends AuthenticationPage {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      podcastDetails: {},\r\n      userId: \"\",\r\n      // Modal state\r\n      disabled: true,\r\n      backLabel: \"Close\",\r\n      show: true,\r\n      progressBar: 50,\r\n\r\n      // Podcast state\r\n      podcastDescription: {\r\n        podcastTitle: \"\",\r\n        podcastDescription: \"\",\r\n      },\r\n      coverImage: \"\",\r\n      coverFile: \"\",\r\n      coverName: \"choose cover\",\r\n\r\n      //IconLoader\r\n      IconLoader: \"\",\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const user = localStorage.getItem(\"userDetails\");\r\n    const userDetails = JSON.parse(user);\r\n    console.log(\"current user \", userDetails);\r\n\r\n    this.setState({\r\n      userId: userDetails._id,\r\n    });\r\n\r\n    try {\r\n      const podcastDescription = this.state.podcastDescription;\r\n      podcastDescription.podcastTitle =\r\n        (await this.props.podcastDetails.title) || \"\";\r\n      podcastDescription.podcastDescription =\r\n        this.props.podcastDetails.description || \"\";\r\n\r\n      this.setState({\r\n        podcastDetails: this.props.podcastDetails || {},\r\n        podcastDescription: podcastDescription,\r\n        coverImage: await this.props.podcastDetails.coverImageUrl,\r\n      });\r\n    } catch (error) {}\r\n  }\r\n\r\n  handleDialogReturn = () => {\r\n    const { progressBar, coverName, backLabel } = this.state;\r\n\r\n    if (progressBar === 100)\r\n      this.setState({\r\n        progressBar: 50,\r\n      });\r\n\r\n    if (progressBar === 50 && backLabel === \"Close\") {\r\n      console.log(\"Close Clicked\");\r\n      this.props.closeModal();\r\n    }\r\n\r\n    if (coverName) {\r\n      this.setState({\r\n        disabled: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleUploadSubmit = async () => {\r\n    this.setState({ disabled: true });\r\n    const progressBar = this.state.progressBar;\r\n    if (progressBar === 50)\r\n      this.setState({\r\n        progressBar: 100,\r\n      });\r\n\r\n    this.setState({\r\n      disabled: false,\r\n    });\r\n\r\n    if (this.state.progressBar === 100) {\r\n      alert(\"Yes!\");\r\n\r\n      this.setState({\r\n        disabled: false,\r\n      });\r\n\r\n      this.props.closeModal();\r\n\r\n      //If a user does not want to edit his podcast\r\n      if (!this.props.podcastEditIntention) {\r\n        this.props.createSuccess(true, false);\r\n      }\r\n\r\n      const podcastOrEpisodeDetails = this.props.uploadPodcast\r\n        ? capturePodcastDetails(\r\n            this.state.coverFile,\r\n            this.state.podcastDescription.podcastTitle,\r\n            this.state.podcastDescription.podcastDescription,\r\n            this.state.userId\r\n          )\r\n        : captureEpisodeDetails(\r\n            this.state.audioFile,\r\n            this.state.episodeDescription.episodeTitle,\r\n            this.state.episodeDescription.episodeDescription,\r\n            \"6013389326c3d60f7c6294bd\"\r\n          );\r\n\r\n      console.log(\"The received \", podcastOrEpisodeDetails);\r\n\r\n      try {\r\n        const response =\r\n          this.props.podcastEditIntention && this.props.uploadPodcast\r\n            ? await updatePodcast(\r\n                podcastOrEpisodeDetails,\r\n                this.state.podcastDetails._id\r\n              )\r\n            : this.props.uploadPodcast\r\n            ? await uploadPodcastDetails(podcastOrEpisodeDetails)\r\n            : await uploadEpisode(podcastOrEpisodeDetails);\r\n        console.log(\"Response\", response);\r\n\r\n        if (response.status) {\r\n          if (!this.props.podcastEditIntention) {\r\n            this.props.createSuccess(true, true);\r\n          }\r\n          setTimeout(() => {\r\n            // window.location = \"/dashboard/dashboard\";\r\n          }, 2000);\r\n        }\r\n      } catch (error) {\r\n        console.log(\"Error\", error);\r\n        alert(\"Failed\");\r\n        // window.location = \"/dashboard/dashboard\";\r\n      }\r\n    }\r\n  };\r\n\r\n  validatePodcastOrEpisodeDescription = () => {\r\n    if (this.props.uploadPodcast) {\r\n      const podcastDescription = { ...this.state.podcastDescription };\r\n      if (\r\n        podcastDescription.podcastTitle &&\r\n        podcastDescription.podcastDescription\r\n      ) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      const episodeDescription = { ...this.state.episodeDescription };\r\n      if (\r\n        episodeDescription.episodeTitle &&\r\n        episodeDescription.episodeDescription\r\n      ) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  handleInputChange = ({ currentTarget: input }) => {\r\n    if (this.props.uploadPodcast) {\r\n      const podcastDescription = { ...this.state.podcastDescription };\r\n      podcastDescription[input.name] = input.value;\r\n      console.log(podcastDescription);\r\n      this.setState({ podcastDescription });\r\n\r\n      const validation = this.validatePodcastOrEpisodeDescription();\r\n      if (validation) {\r\n        this.setState({\r\n          disabled: false,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          disabled: false,\r\n        });\r\n      }\r\n    } else {\r\n      const episodeDescription = { ...this.state.episodeDescription };\r\n      episodeDescription[input.name] = input.value;\r\n      console.log(episodeDescription);\r\n      this.setState({ episodeDescription });\r\n\r\n      const episodevalidation = this.validatePodcastOrEpisodeDescription();\r\n      if (episodevalidation) {\r\n        this.setState({\r\n          disabled: false,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          disabled: false,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleImageChange = (e, input) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      let reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        this.setState({ coverImage: e.target.result });\r\n      };\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n    if (input === \"cover\") {\r\n      this.setState({\r\n        coverName: e.target.files[0].name.substring(0, 15) + \"...\",\r\n        disabled: false,\r\n      });\r\n    }\r\n\r\n    console.log(e.target.files[0]);\r\n    this.setState({\r\n      coverFile: e.target.files[0],\r\n    });\r\n  };\r\n\r\n  handleAudioUpload = (e, input) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      let reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        this.setState({ audioFile: e.target.result });\r\n      };\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n    if (input === \"audio\") {\r\n      this.setState({\r\n        audioName: e.target.files[0].name.substring(0, 15) + \"...\",\r\n        disabled: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  coverContent = () => {\r\n    return (\r\n      <section className=\"cover-content\" id=\"cover-content\">\r\n        <div className=\"upload-input-container\">\r\n          <div className=\"content-wrapper\">\r\n            <React.Fragment>\r\n              <p>Drag and drop image file here</p>\r\n              <p>or</p>\r\n              <input\r\n                type=\"file\"\r\n                name=\"coverImage\"\r\n                id=\"coverImage\"\r\n                hidden\r\n                onChange={(e) => this.handleImageChange(e, \"cover\")}\r\n                accept=\".jpg, .jpeg, .png\"\r\n              />\r\n              <label for=\"coverImage\">\r\n                {inputFileIcon()}\r\n                {this.state.coverName}\r\n              </label>\r\n            </React.Fragment>\r\n          </div>\r\n        </div>\r\n\r\n        {this.state.coverImage ? (\r\n          <div id=\"target\">\r\n            <p>Cover preview</p>\r\n            <img id=\"target\" src={this.state.coverImage} alt=\"\" />\r\n          </div>\r\n        ) : (\r\n          \" \"\r\n        )}\r\n      </section>\r\n    );\r\n  };\r\n\r\n  audioContent = () => {\r\n    return (\r\n      <section className=\"cover-content\">\r\n        <div className=\"upload-input-container\">\r\n          <div className=\"content-wrapper\">\r\n            <p>Drag and drop image file here</p>\r\n            <p>or</p>\r\n            <input\r\n              type=\"file\"\r\n              onChange={(e) => this.handleAudioUpload(e, \"audio\")}\r\n              name=\"audioFile\"\r\n              id=\"audioFile\"\r\n              hidden\r\n              accept=\".mp4, .wav, .m4a, .mp3\"\r\n            />\r\n            <label for=\"audioFile\">\r\n              {headphoneIcon()}\r\n              {this.state.audioName}\r\n            </label>\r\n          </div>\r\n        </div>\r\n        {this.state.audioFile ? (\r\n          <div id=\"audioTarget\">\r\n            <p>Audio preview</p>\r\n            <audio src={this.state.audioFile} controls></audio>\r\n          </div>\r\n        ) : (\r\n          \" \"\r\n        )}\r\n      </section>\r\n    );\r\n  };\r\n\r\n  descriptionContent = () => {\r\n    return (\r\n      <section className=\"cover-content\">\r\n        <div className=\"description-input-wrapper\">\r\n          <React.Fragment>\r\n            <label for=\"podcastTitle\" className=\"description-content-container\">\r\n              <p>Podcast Name</p>\r\n              <input\r\n                value={this.state.podcastDescription.podcastTitle}\r\n                onChange={this.handleInputChange}\r\n                type=\"text\"\r\n                name=\"podcastTitle\"\r\n                placeholder=\"Title of podcast goes here\"\r\n                id=\"podcastTitle\"\r\n              />\r\n            </label>\r\n            <label\r\n              for=\"podcastTitle\"\r\n              className=\"description-content-container desc\"\r\n            >\r\n              <p>Podcast Description</p>\r\n\r\n              <textarea\r\n                value={this.state.podcastDescription.podcastDescription}\r\n                onChange={this.handleInputChange}\r\n                name=\"podcastDescription\"\r\n                id=\"podcastDescription\"\r\n                cols=\"30\"\r\n                rows=\"10\"\r\n                placeholder=\"Tell everyone about your podcast\"\r\n                required\r\n              ></textarea>\r\n            </label>\r\n          </React.Fragment>\r\n        </div>\r\n      </section>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Modal show={this.props.show}>\r\n          <ProgressBar now={this.state.progressBar} />\r\n          <Modal.Header>\r\n            <Modal.Title>\r\n              {this.state.progressBar === 50\r\n                ? \"Step 1 of 2: Choose your cover art\"\r\n                : \"Step 2 of 2: Add information for this podcast\"}\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Tabs>\r\n              {this.state.progressBar === 50 ? (\r\n                <Tab eventKey=\"home\">{this.coverContent()}</Tab>\r\n              ) : (\r\n                <Tab className=\"active\" eventKey=\"profile\">\r\n                  {this.descriptionContent()}\r\n                </Tab>\r\n              )}\r\n            </Tabs>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <ModalButton variant=\"secondary\" onClick={this.handleDialogReturn}>\r\n              {this.state.progressBar === 50 ? this.state.backLabel : \"Back\"}\r\n            </ModalButton>\r\n            <ModalButton\r\n              disabled={this.state.disabled}\r\n              onClick={this.handleUploadSubmit}\r\n              variant=\"primary\"\r\n            >\r\n              {this.state.progressBar === 100 ? \"Complete\" : \"Next\"}\r\n            </ModalButton>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        {this.state.IconLoader}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport { UploadModal };\r\n","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\pages\\application\\userProfile\\index.js",[],"C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\pages\\auth\\logout\\index.js",[],"C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\widgets\\landingNavbar\\index.js",[],"C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\pages\\auth\\activateAccount\\index.js",[],"C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\api\\auth\\getCurrentUser\\index.js",[],"C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\api\\auth\\podcastService\\index.js",[],"C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\api\\auth\\episodeService\\index.js",[],"C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\widgets\\carousel\\index.js",[],"C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\utilities\\index.js",[],"C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\utilities\\imageSlider\\index.js",[],"C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\utilities\\arrow\\index.js",[],"C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\pages\\application\\podcastPage\\index.js",[],"C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\widgets\\episodeUploadModal\\index.js",["208","209","210"],"import React from \"react\";\r\nimport {\r\n  captureEpisodeDetails,\r\n  getAllEpisodesOfAPodcast,\r\n  getAPodcast,\r\n  uploadEpisode,\r\n} from \"../../api/auth\";\r\nimport { headphoneIcon, primaryLogo } from \"../../assets\";\r\nimport { UploadModal } from \"../uploadModal\";\r\nimport { Tab } from \"react-bootstrap\";\r\nimport { Modal, Tabs } from \"react-bootstrap\";\r\nimport { ProgressBar } from \"react-bootstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { IconLoader, IconLoaderVariant1 } from \"../../utilities\";\r\n\r\nclass EpisodeUploadModal extends UploadModal {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      podcastDetails: {},\r\n      userId: \"\",\r\n      // Modal state\r\n      disabled: true,\r\n      backLabel: \"Close\",\r\n      show: true,\r\n      progressBar: 50,\r\n\r\n      // Episode state\r\n      episodeDescription: {\r\n        episodeTitle: \"\",\r\n        episodeDescription: \"\",\r\n      },\r\n      audioName: \"choose audio\",\r\n      audioFile: null,\r\n      audioFilePreview: null,\r\n\r\n      //IconLoader\r\n      IconLoader: \"\",\r\n\r\n      // Upload progress\r\n      uploadInProgress: false,\r\n      uploadCompleted: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = localStorage.getItem(\"userDetails\");\r\n    const userDetails = JSON.parse(user);\r\n\r\n    this.setState({\r\n      userId: userDetails._id,\r\n    });\r\n  }\r\n\r\n  handleDialogReturn = () => {\r\n    const { progressBar, coverName, backLabel } = this.state;\r\n    if (progressBar === 100)\r\n      this.setState({\r\n        progressBar: 50,\r\n      });\r\n\r\n    if (progressBar === 50 && backLabel === \"Close\") {\r\n      console.log(\"Close Clicked\");\r\n      this.props.closeModal();\r\n    }\r\n\r\n    if (coverName) {\r\n      this.setState({\r\n        disabled: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleUploadSubmit = async () => {\r\n    this.setState({ disabled: true });\r\n    const progressBar = this.state.progressBar;\r\n    if (progressBar === 50)\r\n      this.setState({\r\n        progressBar: 100,\r\n      });\r\n\r\n    this.setState({\r\n      disabled: false,\r\n    });\r\n\r\n    if (this.state.progressBar === 100) {\r\n      alert(\"Yes!\");\r\n\r\n      this.setState({\r\n        disabled: false,\r\n        uploadInProgress: true,\r\n      });\r\n\r\n      //If a user does not want to edit his podcast\r\n      //   if (!this.props.podcastEditIntention) {\r\n      //     this.props.createSuccess(true, false);\r\n      //   }\r\n\r\n      const episodeDetails = captureEpisodeDetails(\r\n        this.state.audioFile,\r\n        this.state.episodeDescription.episodeTitle,\r\n        this.state.episodeDescription.episodeDescription,\r\n        this.props.podcastDetails._id\r\n      );\r\n\r\n      try {\r\n        const response = await uploadEpisode(episodeDetails);\r\n\r\n        if (response.status) {\r\n          const newEpisodes = await getAllEpisodesOfAPodcast(\r\n            this.props.podcastDetails._id\r\n          );\r\n          console.log(\"New podcast details\", newEpisodes);\r\n\r\n          if (newEpisodes.status) {\r\n            this.props.updatePodcastDetails(newEpisodes.data);\r\n\r\n            this.setState({\r\n              uploadCompleted: true,\r\n            });\r\n            setTimeout(() => {\r\n              this.props.closeModal();\r\n            }, 2000);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.log(\"Error\", error);\r\n        alert(\"Failed\");\r\n        // window.location = \"/dashboard/dashboard\";\r\n      }\r\n    }\r\n  };\r\n\r\n  validatePodcastOrEpisodeDescription = () => {\r\n    const episodeDescription = { ...this.state.episodeDescription };\r\n    if (\r\n      episodeDescription.episodeTitle &&\r\n      episodeDescription.episodeDescription\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  handleAudioUpload = (e, input) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      this.setState({ audioFile: e.target.files[0] });\r\n    }\r\n    if (input === \"audio\") {\r\n      this.setState({\r\n        audioName: e.target.files[0].name.substring(0, 15) + \"...\",\r\n        disabled: false,\r\n      });\r\n    }\r\n\r\n    if (e.target.files && e.target.files[0]) {\r\n      let reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        this.setState({ audioFilePreview: e.target.result });\r\n      };\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  audioContent = () => {\r\n    return (\r\n      <section className=\"cover-content\">\r\n        <div className=\"upload-input-container\">\r\n          <div className=\"content-wrapper\">\r\n            <p>Drag and drop image file here</p>\r\n            <p>or</p>\r\n            <input\r\n              type=\"file\"\r\n              onChange={(e) => this.handleAudioUpload(e, \"audio\")}\r\n              name=\"audioFile\"\r\n              id=\"audioFile\"\r\n              hidden\r\n              accept=\".mp4, .wav, .m4a, .mp3\"\r\n            />\r\n            <label for=\"audioFile\">\r\n              {headphoneIcon()}\r\n              {this.state.audioName}\r\n            </label>\r\n          </div>\r\n        </div>\r\n        {this.state.audioFile ? (\r\n          <div id=\"audioTarget\">\r\n            <p>Audio preview</p>\r\n            <audio src={this.state.audioFilePreview} controls></audio>\r\n          </div>\r\n        ) : (\r\n          \" \"\r\n        )}\r\n      </section>\r\n    );\r\n  };\r\n\r\n  descriptionContent = () => {\r\n    return (\r\n      <section className=\"cover-content\">\r\n        <div className=\"description-input-wrapper\">\r\n          <React.Fragment>\r\n            <label for=\"episodeTitle\" className=\"description-content-container\">\r\n              <p>Episode Name</p>\r\n              <input\r\n                value={this.state.episodeDescription.episodeTitle}\r\n                onChange={this.handleInputChange}\r\n                type=\"text\"\r\n                name=\"episodeTitle\"\r\n                placeholder=\"Title of episode goes here\"\r\n                id=\"episodeTitle\"\r\n              />\r\n            </label>\r\n            <label\r\n              for=\"episodeTitle\"\r\n              className=\"description-content-container desc\"\r\n            >\r\n              <p>Episode Description</p>\r\n\r\n              <textarea\r\n                value={this.state.episodeDescription.episodeDescription}\r\n                onChange={this.handleInputChange}\r\n                name=\"episodeDescription\"\r\n                id=\"episodeDescription\"\r\n                cols=\"30\"\r\n                rows=\"10\"\r\n                placeholder=\"Add an episode description\"\r\n                required\r\n              ></textarea>\r\n            </label>\r\n          </React.Fragment>\r\n        </div>\r\n      </section>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Modal show={this.props.show}>\r\n          {this.state.uploadInProgress ? (\r\n            this.state.uploadCompleted ? (\r\n              <React.Fragment>\r\n                <div className=\"upload-in-progress completed\">\r\n                  Completed. Please wait..\r\n                  <i className=\"fa fa-check-square\" aria-hidden=\"true\"></i>\r\n                </div>\r\n              </React.Fragment>\r\n            ) : (\r\n              <div className=\"upload-in-progress\">\r\n                <IconLoaderVariant1 />\r\n                Episode upload in progress...\r\n              </div>\r\n            )\r\n          ) : (\r\n            <React.Fragment>\r\n              <Modal.Header>\r\n                <Modal.Title>\r\n                  {this.state.progressBar === 50\r\n                    ? \"Step 1 of 2: Add information for this episode\"\r\n                    : \"Step 2 of 2: Upload episode audio\"}\r\n                </Modal.Title>\r\n              </Modal.Header>\r\n              <ProgressBar now={this.state.progressBar} />\r\n              <Modal.Body>\r\n                <Tabs>\r\n                  {this.state.progressBar === 50 ? (\r\n                    <Tab eventKey=\"home\">{this.descriptionContent()}</Tab>\r\n                  ) : (\r\n                    <Tab className=\"active\" eventKey=\"profile\">\r\n                      {this.audioContent()}\r\n                    </Tab>\r\n                  )}\r\n                </Tabs>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={this.handleDialogReturn}>\r\n                  {this.state.progressBar === 50\r\n                    ? this.state.backLabel\r\n                    : \"Back\"}\r\n                </Button>\r\n                <Button\r\n                  disabled={this.state.disabled}\r\n                  onClick={this.handleUploadSubmit}\r\n                  variant=\"primary\"\r\n                >\r\n                  {this.state.progressBar === 100 ? \"Complete\" : \"Next\"}\r\n                </Button>\r\n              </Modal.Footer>\r\n            </React.Fragment>\r\n          )}\r\n        </Modal>\r\n        {this.state.IconLoader}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport { EpisodeUploadModal };\r\n","C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\utilities\\audioPlayer\\index.js",[],"C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\utilities\\audioPlayer\\header\\index.js",[],"C:\\Users\\User\\Desktop\\Projects\\press-play\\src\\utilities\\audioPlayer\\controls\\index.js",["211"],{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","severity":1,"message":"217","line":13,"column":7,"nodeType":"218","messageId":"219","endLine":13,"endColumn":18},{"ruleId":"216","severity":1,"message":"220","line":14,"column":7,"nodeType":"218","messageId":"219","endLine":14,"endColumn":22},{"ruleId":"216","severity":1,"message":"221","line":2,"column":8,"nodeType":"218","messageId":"219","endLine":2,"endColumn":14},{"ruleId":"216","severity":1,"message":"222","line":6,"column":7,"nodeType":"218","messageId":"219","endLine":6,"endColumn":12},{"ruleId":"216","severity":1,"message":"223","line":3,"column":8,"nodeType":"218","messageId":"219","endLine":3,"endColumn":17},{"ruleId":"216","severity":1,"message":"224","line":2,"column":15,"nodeType":"218","messageId":"219","endLine":2,"endColumn":18},{"ruleId":"216","severity":1,"message":"225","line":2,"column":25,"nodeType":"218","messageId":"219","endLine":2,"endColumn":28},{"ruleId":"216","severity":1,"message":"224","line":2,"column":15,"nodeType":"218","messageId":"219","endLine":2,"endColumn":18},{"ruleId":"216","severity":1,"message":"226","line":2,"column":10,"nodeType":"218","messageId":"219","endLine":2,"endColumn":28},{"ruleId":"216","severity":1,"message":"227","line":13,"column":10,"nodeType":"218","messageId":"219","endLine":13,"endColumn":20},{"ruleId":"216","severity":1,"message":"228","line":5,"column":3,"nodeType":"218","messageId":"219","endLine":5,"endColumn":14},{"ruleId":"216","severity":1,"message":"229","line":8,"column":25,"nodeType":"218","messageId":"219","endLine":8,"endColumn":36},{"ruleId":"216","severity":1,"message":"227","line":14,"column":10,"nodeType":"218","messageId":"219","endLine":14,"endColumn":20},{"ruleId":"216","severity":1,"message":"230","line":2,"column":10,"nodeType":"218","messageId":"219","endLine":2,"endColumn":25},"no-native-reassign",["231"],"no-negated-in-lhs",["232"],"no-unused-vars","'newPassword' is assigned a value but never used.","Identifier","unusedVar","'confirmPassword' is assigned a value but never used.","'logger' is defined but never used.","'login' is assigned a value but never used.","'jwtDecode' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'hamburgerUnclicked' is defined but never used.","'IconLoader' is defined but never used.","'getAPodcast' is defined but never used.","'primaryLogo' is defined but never used.","'getAllUserLikes' is defined but never used.","no-global-assign","no-unsafe-negation"]